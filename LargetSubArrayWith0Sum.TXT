import java.util.HashMap;

public class LargestSubarrayWith0Sum {
	
	static int maxLen(int arr[], int n) {
        // Your code here
		
		HashMap<Integer, Integer> hm = new HashMap<>();
		
		int res = 0, sum = 0;
		
		for(int i=0; i<n; ++i) {
			
			sum += arr[i];
			
			if(sum == 0) {
				res = Math.max(res, i+1);
			} else if(hm.get(sum) != null) {
				res = Math.max(res,  i - hm.get(sum));
			} else {
				hm.put(sum, i);
			}
			
		}
		
		return res;
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int n = 8;
		int[] arr = {15,-2,2,-8,1,7,10,23};
		
		System.out.println(maxLen(arr, n));
	}
	
	static int bruteForce(int arr[], int n) {
        // Your code here
		
		int count;
		int res = -1;
		
		for(int i=0; i<n; ++i) {
			int sum = arr[i];
			count = 1;
			
			for(int j=i+1; j<n; ++j) {
				sum += arr[j];
				++count;
				if(sum == 0 && count > res) {
					res = count;
				}
			}
		}
		
		return res;
    }
	

}
