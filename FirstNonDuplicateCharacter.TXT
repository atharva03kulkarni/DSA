

public class FirstNonDuplicateCharacter {
	
	static final int NO_OF_CHARS = 256;
    static char count[] = new char[NO_OF_CHARS];
 
    /* calculate count of characters
       in the passed string */
    static void getCharCountArray(String str)
    {
        for (int i = 0; i < str.length(); i++)
            count[str.charAt(i)]++;
    }
	
	static int findNonDuplicate(String str) {
		getCharCountArray(str);
        int index = -1, i;
 
        for (i = 0; i < str.length(); i++) {
            if (count[str.charAt(i)] == 1) {
                index = i;
                break;
            }
        }
 
        return index+1;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String str = "statistics";
		
		System.out.println(findNonDuplicate(str));
	}

}


//OR

public static int getUniqueLetter(String s) {
	HashMap<Character, Integer> h = new HashMap();
	
	for(int i=0; i<s.length(); i++) {
		h.put(s.charAt(i), h.getOrDefault(s.charAt(i), 0) + 1); 		//checks and return value of key if not present returns the default value
	}
	
	char u = s.charAt(0);
	boolean found = false;
	
	for(Map.Entry<Character, Integer> e : h.entrySet()) {
		if(e.getValue() == 1) {
			found = true
			u = e.getKey();
			break;
		}
	}
	
	if(found) 
		return s.indexOf(u)+1;
	else 
		return -1;
}



